#include "encryptionModule.h"
#include "simpletest.h"
#include <iostream>
#include <iterator>
#include <iostream>


using namespace AES;
using namespace std;


DEFINE_TEST(EncryptTestExampleOneRound)
{

    static uint8_t input[4][4] = {
        {0x32, 0x88, 0x31, 0xe0},
        {0x43, 0x5a, 0x31, 0x37},
        {0xf6, 0x30, 0x98, 0x07},
        {0xa8, 0x8d, 0xa2, 0x34}};

    static uint8_t cipher_key [4][4]= {
        {0x2b, 0x28, 0xab, 0x09},
        {0x7e, 0xae, 0xf7, 0xcf},
        {0x15, 0xd2, 0x15, 0x4f},
        {0x16, 0xa6, 0x88, 0x3c}};


    Encrypt_one_round(input, cipher_key);
    TEST_EQ(input[1][0],0x66);
    TEST_EQ(input[0][3],0x28);
    TEST_EQ(input[2][2],0xd3);
    TEST_EQ(input[3][3],0x4c);   


}


DEFINE_TEST(EncryptTest128bits)
{

    // static uint8_t state[4][4] = {
    // {0x00, 0x44, 0x88, 0xcc},
    // {0x11, 0x55, 0x99, 0xdd},
    // {0x22, 0x66, 0xaa, 0xee},
    // {0x33, 0x77, 0xbb, 0xff}};
    static uint8_t input[16] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};



    AES::AESMode mode;
    mode = CommonVariables::AES128;
    uint8_t output[4][4];
    cbyte key[16] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f};
    Encrypt(input, key, output, mode);
    
    TEST_EQ(output[0][0],0x69);
    TEST_EQ(output[0][1],0x6a);
    TEST_EQ(output[0][2],0xd8);
    TEST_EQ(output[0][3],0x70);
    TEST_EQ(output[1][0],0xc4);
    TEST_EQ(output[1][1],0x7b);
    TEST_EQ(output[1][2],0xcd);
    TEST_EQ(output[1][3],0xb4);
    TEST_EQ(output[2][0],0xe0);
    TEST_EQ(output[2][1],0x04);
    TEST_EQ(output[2][2],0xb7);
    TEST_EQ(output[2][3],0xc5);
    TEST_EQ(output[3][0],0xd8);
    TEST_EQ(output[3][1],0x30);
    TEST_EQ(output[3][2],0x80);
    TEST_EQ(output[3][3],0x5a);


}


DEFINE_TEST(EncryptTest192bits)
{

    // static uint8_t state[4][4] = {
    // {0x00, 0x44, 0x88, 0xcc},
    // {0x11, 0x55, 0x99, 0xdd},
    // {0x22, 0x66, 0xaa, 0xee},
    // {0x33, 0x77, 0xbb, 0xff}};
    static uint8_t input[16] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};



    AES::AESMode mode;
    mode = CommonVariables::AES192;
    uint8_t output[4][4];
    cbyte key[24] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11,0x12,0x13,0x14,0x15,0x16,0x17};
    Encrypt(input, key, output, mode);
    
    TEST_EQ(output[0][0],0xdd);

}

DEFINE_TEST(EncryptTest256bits)
{

    // static uint8_t state[4][4] = {
    // {0x00, 0x44, 0x88, 0xcc},
    // {0x11, 0x55, 0x99, 0xdd},
    // {0x22, 0x66, 0xaa, 0xee},
    // {0x33, 0x77, 0xbb, 0xff}};
    static uint8_t input[16] = {0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff};


    AES::AESMode mode;
    mode = CommonVariables::AES256;
    uint8_t output[4][4];
    cbyte key[32] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f};
    Encrypt(input, key, output, mode);
    
    TEST_EQ(output[0][0],0x8e);

}